sourceSets {
    functionalTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    functionalTestImplementation.extendsFrom implementation, testImplementation
    functionalTestRuntimeOnly.extendsFrom runtimeOnly, testRuntimeOnly
}

def functionalTestTask = tasks.register('functionalTest', Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    shouldRunAfter(tasks.named('test'))
}

tasks.named('check') {
    dependsOn functionalTestTask
}

pluginManager.withPlugin('java-gradle-plugin') {
    gradlePlugin {
        testSourceSets sourceSets.functionalTest
    }
}

